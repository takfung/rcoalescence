% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppCoalescenceModule.R
\docType{class}
\name{ProtractedTreeSimulation}
\alias{ProtractedTreeSimulation}
\title{Protracted non-spatial neutral models}
\description{
Run non-spatial neutral models with protracted speciation. Here no map files are 
required, but the protracted speciation parameters should be specified.
}
\section{Methods}{

\describe{
\item{\code{applySpeciationRates(speciation_rates = NA, output_file = "none",
  times_list = c(0), metacommunity_option = c(), metacommunity_size = c(),
  metacommunity_speciation_rate = c(),
  metacommunity_external_reference = c())}}{Applies the provided speciation parameters to the TreeSimulation}

\item{\code{setTreeSimulationParameters(task, seed, speciation_rate,
  output_directory = "output", max_time = 3600, desired_specnum = 1,
  times_list = c(0), uses_logging = NA, deme = 1, deme_sample = 1)}}{Sets all TreeSimulation parameters}
}}

\section{Alternative classes}{

For alternative classes providing similar functionality, see \link[=NeutralTreeSimulation]{here}.
}

\section{Protracted Non-spatial Models}{

Run non-spatial neutral models with protracted speciation. Here no map files are required, but
the protracted speciation parameters should be specified.
}

\section{TreeSimulation parameters}{

These parameters are required at TreeSimulation time. The vast majority have defaults,
which are defined in setTreeSimulationParameters()
\itemize{
\item \emph{task}: the task reference number
\item \emph{seed}: the seed for setting random number generation
\item \emph{output_directory}: the path to the folder for storing TreeSimulation files
\item \emph{max_time}: the maximum number of seconds to simulate for before pausing
\item \emph{desired_specnum}: the desired number of species to aim for
\item \emph{times_list}: list of temporal sampling points
\item \emph{uses_logging}: if true, all outputs are written to console
\item \emph{deme}: the number of individuals per cell
\item \emph{deme_sample}: the global sampling proportion
\item \emph{speciation_rate}: the minimum speciation rate for the TreeSimulation
}
}

\section{Protracted speciation parameters}{

These parameters should match pairwise, i.e. the nth item in min_speciation_gens should go with
the nth item in max_speciation_gens
\itemize{
\item \emph{min_speciation_gens}: list of minimum number of generations required before speciation
\item \emph{max_speciation_gens}: list of maximum number of generations required before speciation
}
}

\section{Post-TreeSimulation parameters}{

These are for rebuilding the coalescence TreeSimulation under different conditions.
\itemize{
\item \emph{output_file}: the directory to output to, defaults to "none"
\item \emph{use_spatial}: if true, records full spatial locations of all individuals. Default=FALSE
\item \emph{sample_file}: supply a mask for defining spatial sampling. Default="null"
\item \emph{use_fragments}: supply a file containing fragment coordinates, or TRUE to let program calculate fragments
\item \emph{speciation_rates}: list of speciation rates to apply
\item \emph{times_list}: list of times to calculate coalescence TreeSimulation for
\item \emph{min_speciation_gens}: list of the minimum number of generations required before speciation
\item \emph{max_speciation_gens}: list of the maximum number of generations required before speciation
\item \emph{metacommunity_size}: the number of individuals in the metacommunity
\item \emph{metacommunity_speciation_rate}: the effective speciation rate of the metacommunity
}
}

\examples{
# Example simulation for non-spatial models with protracted speciation
library(rcoalescence)
simulation <- ProtractedTree$new()
# Simulate 100 individuals
simulation$setSimulationParameters(seed=11, task =1, output_directory = "output", 
                                   speciation_rate = 0.5, deme=100, uses_logging = TRUE,
                                   min_speciation_gen=100, max_speciation_gen = 1000)
simulation$runSimulation()

# Apply additional speciation rates
simulation$applySpeciationRates(speciation_rates = c(0.001, 0.7, 0.8),
                                min_speciation_gens = c(10, 20, 20), 
                                max_speciation_gens = c(500, 500, 1000))
# Output to a database
simulation$output()
# Get the species richness
simulation$getSpeciesRichness(1)
# Get the species abundances (last 5)
tail(simulation$getSpeciesAbundances(1), 5)

}
